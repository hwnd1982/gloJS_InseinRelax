const{existsSync,readFileSync,writeFileSync}=require("fs"),{createServer}=require("http"),DB_FILE=process.env.DB_FILE||"./db.json",PORT=process.env.PORT||3e3,URI_PREFIX="/api/items";class ApiError extends Error{constructor(e,t){super(),this.statusCode=e,this.data=t}}function drainJson(e){return new Promise((t=>{let n="";e.on("data",(e=>{n+=e})),e.on("end",(()=>{t(JSON.parse(n))}))}))}function makeItemFromData(e){const t=[];function n(e){return e&&String(e).trim()||""}const s={type:n(e.type),name:n(e.name),units:n(e.units),cost:(r=e.cost,!isNaN(parseInt(r))&&isFinite(r)?parseFloat(r):"")};var r;if(s.type||t.push({field:"type",message:"Не указан тип услуги"}),s.name||t.push({field:"name",message:"Не указан вид услуги"}),s.units||t.push({field:"units",message:"Не указаны еденицы измерения"}),s.cost||t.push({field:"cost",message:"Не указана цена или указана не верно"}),t.length)throw new ApiError(422,{errors:t});return s}function getItemList(e={}){const t=JSON.parse(readFileSync(DB_FILE)||"[]");if(e.search){const n=e.search.trim().toLowerCase();return t.filter((e=>[e.type,e.name,e.units,e.cost].some((e=>e.toLowerCase().includes(n)))))}return t}function createItem(e){const t=makeItemFromData(e);return t.id=Math.random().toString(10).substring(2,9)+Date.now().toString().substring(7,12),t.createdAt=t.updatedAt=(new Date).toISOString(),writeFileSync(DB_FILE,JSON.stringify([...getItemList(),t]),{encoding:"utf8"}),t}function getItem(e){const t=getItemList().find((({id:t})=>t===e));if(!t)throw new ApiError(404,{message:"Item Not Found"});return t}function updateItem(e,t){const n=getItemList(),s=n.findIndex((({id:t})=>t===e));if(-1===s)throw new ApiError(404,{message:"Item Not Found"});return Object.assign(n[s],makeItemFromData({...n[s],...t})),n[s].updatedAt=(new Date).toISOString(),writeFileSync(DB_FILE,JSON.stringify(n),{encoding:"utf8"}),n[s]}function deleteItem(e){const t=getItemList(),n=t.findIndex((({id:t})=>t===e));if(-1===n)throw new ApiError(404,{message:"Item Not Found"});return t.splice(n,1),writeFileSync(DB_FILE,JSON.stringify(t),{encoding:"utf8"}),{}}existsSync(DB_FILE)||writeFileSync(DB_FILE,"[]",{encoding:"utf8"}),module.exports=createServer((async(e,t)=>{if(t.setHeader("Content-Type","application/json"),t.setHeader("Access-Control-Allow-Origin","*"),t.setHeader("Access-Control-Allow-Methods","GET, POST, PATCH, DELETE, OPTIONS"),t.setHeader("Access-Control-Allow-Headers","Content-Type"),"OPTIONS"===e.method)return void t.end();if(!e.url||!e.url.startsWith(URI_PREFIX))return t.statusCode=404,void t.end(JSON.stringify({message:"Not Found"}));const[n,s]=e.url.substr(URI_PREFIX.length).split("?"),r={};if(s)for(const e of s.split("&")){const[t,n]=e.split("=");r[t]=n?decodeURIComponent(n):""}try{const s=await(async()=>{if(""===n||"/"===n){if("GET"===e.method)return getItemList(r);if("POST"===e.method){const n=createItem(await drainJson(e));return t.statusCode=201,t.setHeader("Access-Control-Expose-Headers","Location"),t.setHeader("Location",`/api/items/${n.id}`),n}}else{const t=n.substr(1);if("GET"===e.method)return getItem(t);if("PATCH"===e.method)return updateItem(t,await drainJson(e));if("DELETE"===e.method)return deleteItem(t)}return null})();t.end(JSON.stringify(s))}catch(e){e instanceof ApiError?(t.writeHead(e.statusCode),t.end(JSON.stringify(e.data))):(t.statusCode=500,t.end(JSON.stringify({message:"Server Error"})),console.error(e))}})).on("listening",(()=>{"test"!==process.env.NODE_ENV&&(console.log(`Сервер CRM запущен. Вы можете использовать его по адресу http://localhost:${PORT}`),console.log("Нажмите CTRL+C, чтобы остановить сервер"),console.log("Доступные методы:"),console.log("GET /api/items - получить список услуг, в query параметр search можно передать поисковый запрос"),console.log("POST /api/items - создать новую услугу, в теле запроса нужно передать объект { type: string, name: string, units: string, cost: number }"),console.log("GET /api/items/{id} - получить услугу по ID"),console.log("PATCH /api/items/{id} - изменить услугу с ID, в теле запроса нужно передать объект { type: string, name: string, units: string, cost: number }"),console.log("DELETE /api/items/{id} - удалить услугу по ID"))})).listen(PORT);